---
- name: Ensure home directory for root exists with correct permissions
  file:
    path: /root
    state: directory
    owner: root
    group: root
    mode: '0755'

- name: Create directory structure for monitoring
  file:
    path: "{{ item }}"
    state: directory
    owner: root
    group: root
    mode: "0755"
  with_items:
    - "{{ host_config_mount }}/prometheus"
    - "{{ host_config_mount }}/grafana"
    - "{{ host_config_mount }}/grafana/agent"
    - "{{ host_config_mount }}/grafana/provisioning/dashboards"
    - "{{ host_config_mount }}/grafana/provisioning/datasources"
    - "{{ host_config_mount }}/prometheus/rules"
    - "{{ host_config_mount }}/alertmanager"

- name: Task Copy datasource config
  become_user: root
  become: true
  template:
    src: datasource.yml
    dest: "{{ host_config_mount }}/grafana/provisioning/datasources/datasource.yml"
    force: true
    owner: "root"
    group: "root"
    mode: "0755"
  register: datasource_cfg

- name: Copy dashboard provisioning config
  template:
    src: dashboard.yml
    dest: "{{ host_config_mount }}/grafana/provisioning/dashboards/dashboard.yml"
    owner: root
    group: root
    mode: "0644"
  register: dashboard_cfg

- name: Copy Home Staking dashboard
  template:
    src: home_staking_dashboard.json
    dest: "{{ host_config_mount }}/grafana/provisioning/dashboards/home_staking_dashboard.json"
    owner: root
    group: root
    mode: "0644"
  register: home_staking_dashboard_cfg

- name: Copy alert rules
  template:
    src: alert_rules.yml
    dest: "{{ host_config_mount }}/prometheus/rules/alert_rules.yml"
    owner: root
    group: root
    mode: "0644"
  register: alertrules_cfg

- name: Copy alertmanager config
  template:
    src: alertmanager.yml
    dest: "{{ host_config_mount }}/alertmanager/alertmanager.yml"
    owner: root
    group: root
    mode: "0644"
  register: alertmanager_cfg

- name: Task copy grafana-agent.yml
  become_user: root
  become: true
  template:
    src: grafana-agent.yml
    dest: "{{ host_config_mount }}/grafana/grafana-agent.yml"
    force: true
    owner: "root"
    group: "root"
    mode: "0755"
  register: graf_cfg

- name: Task copy prometheus.yml
  become_user: root
  become: true
  template:
    src: prometheus.yml
    dest: "{{ host_config_mount }}/prometheus/prometheus.yml"
    force: true
    owner: "root"
    group: "root"
    mode: "0755"
  register: prom_cfg

- name: Monitoring config changed
  ansible.builtin.set_fact:
    cfg_changed: "{{ prom_cfg.changed | bool or graf_cfg.changed | bool or datasource_cfg.changed | bool or dashboard_cfg.changed | bool or home_staking_dashboard_cfg.changed | bool or alertrules_cfg.changed | bool or alertmanager_cfg.changed | bool }}"

- name: Start node exporter
  become_user: root
  become: true
  community.docker.docker_container:
    name: "{{ node_exporter_name }}"
    image: prom/node-exporter:latest
    state: started
    pull: true
    restart_policy: unless-stopped
    restart: "{{ cfg_changed }}"
    networks:
      - name: "eth-staking-network-net"
    networks_cli_compatible: true
    privileged: true
    ports:
      - "127.0.0.1:9100:9100"

- name: Start alertmanager
  become_user: root
  become: true
  community.docker.docker_container:
    name: alertmanager
    image: prom/alertmanager:latest
    state: started
    pull: true
    restart_policy: unless-stopped
    restart: "{{ cfg_changed }}"
    networks:
      - name: "eth-staking-network-net"
    networks_cli_compatible: true
    privileged: true
    ports:
      - "9093:9093"
    volumes:
      - "{{ host_config_mount }}/alertmanager:/etc/alertmanager"
    command:
      - "--config.file=/etc/alertmanager/alertmanager.yml"
      - "--storage.path=/alertmanager"

- name: Start prometheus container
  become_user: root
  become: true
  community.docker.docker_container:
    name: "{{prometheus_name}}"
    image: prom/prometheus:latest
    state: started
    pull: true
    restart_policy: unless-stopped
    restart: "{{ cfg_changed }}"
    networks:
      - name: "eth-staking-network-net"
    networks_cli_compatible: true
    privileged: true
    ports:
      - "9090:9090"
    volumes:
      - "{{ host_config_mount }}/prometheus:/etc/prometheus"
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
      - --web.console.libraries=/usr/share/prometheus/console_libraries
      - --web.console.templates=/usr/share/prometheus/consoles
      - --web.enable-lifecycle

- name: Start grafana agent
  become_user: root
  become: true
  community.docker.docker_container:
    name: grafana_agent
    image: grafana/agent:v0.41.1
    state: started
    pull: true
    restart_policy: unless-stopped
    restart: "{{ cfg_changed }}"
    networks:
      - name: "eth-staking-network-net"
    networks_cli_compatible: true
    privileged: true
    ports:
      - "127.0.0.1:12345:12345"
    volumes:
      - "{{ host_config_mount }}/grafana:/etc/agent"
    command:
      - --config.file=/etc/agent/grafana-agent.yml
      - --server.http.address=0.0.0.0:12345

- name: Start grafana dashboard container
  become_user: root
  become: true
  community.docker.docker_container:
    name: grafana
    image: grafana/grafana:latest
    state: started
    pull: true
    restart_policy: unless-stopped
    restart: "{{ cfg_changed }}"
    networks:
      - name: "eth-staking-network-net"
    networks_cli_compatible: true
    privileged: true
    ports:
      - "3001:3001"
    env:
      GF_SECURITY_ADMIN_PASSWORD: "{{ GRAFANA_ADMIN_PASSWORD }}"
      GF_INSTALL_PLUGINS: "grafana-piechart-panel,grafana-clock-panel"
    volumes:
      - "{{ host_config_mount }}/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources"
      - "{{ host_config_mount }}/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards"
